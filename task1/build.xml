<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." name="POS" default="build">
	
	<property name="build.dir" value="${basedir}/build"/>
	<property name="build.classes.dir" value="${build.dir}/classes"/>
	<property name="dist.dir" value="${build.dir}/jar"/>
	<property name="src.dir" value="${basedir}/src"/>
	<property name="lib.dir" value="${basedir}/lib"/>
	<property name="img.dir" value="${basedir}/img"/>
	<property name="conf.dir" value="${basedir}/conf"/>
	<property name="test.dir"   value="${basedir}/test"/>
	<property name="build.test.dir"       value="${build.dir}/test"/>
	
	<property name="data.dir" value="${basedir}/data"/>
	<property name="db.file" value="${data.dir}/POSdb"/>
	<property name="db.alias" value="POS"/>
	<property name="db.url" value="jdbc:hsqldb:hsql://localhost/POS"/>
	<property name="lib.hibernate.dir" value="${lib.dir}/hibernate"/>

	<path id="compile.classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>

	<path id="run.classpath">
		<pathelement location="${build.classes.dir}"/>
		<pathelement location="${build.dir}/img"/>
		<pathelement location="${build.dir}/conf"/>
		<pathelement location="${build.dir}"/>
		<fileset dir="${build.dir}/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${lib.hibernate.dir}">
			<include name="*.jar"/>
		</fileset>
	</path>
	
	<path id="test.classpath">
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
		    <pathelement path="${build.classes.dir}/" />
			<pathelement path="${build.test.dir}/" />
		</path>

	<target name="clean" description="Remove files generated by the previous build">
		<delete dir="${build.dir}"/>
	</target>

	<target name="compile" description="Compiles the source files">
		<mkdir dir="${build.classes.dir}"/>
		<mkdir dir="${build.test.dir}"/>
		<javac
			srcdir="${src.dir}"
			destdir="${build.classes.dir}"
			debug="true"
			debuglevel="lines,vars,source"
			encoding="utf-8"
			compiler="modern"
			target="1.7"
			source="1.7"
			includeantruntime="false">
			<classpath refid="compile.classpath"/>
		</javac>
	</target>

	<target name="build" depends="clean, compile" description="Build project">
		<copy todir="${build.dir}">
			<fileset dir="${basedir}" includes="*.properties"/>
		</copy>
		<copy todir="${build.dir}/img">
			<fileset dir="${img.dir}"/>
		</copy>
		<copy todir="${build.dir}/lib">
			<fileset dir="${lib.dir}" includes="*.jar"/>
		</copy>
		<copy todir="${build.dir}/conf">
			<fileset dir="${conf.dir}"/>
		</copy>
	</target>


	<target name="run" depends="build" description="Execute application">
		<java classname="ee.ut.math.tvt.kvaliteetsedideed.Intro" classpathref="run.classpath" fork="yes">
				<jvmarg value="-Xdebug" />
				<jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=1044" />
			</java>
	</target>

	<target name="runc" depends="build" description="Run the application (console)">
		<java classname="ee.ut.math.tvt.kvaliteetsedideed.Intro" classpathref="run.classpath" fork="yes">
			<arg value="console" />
		</java>
	</target>

	<target name="dist" depends="build, increase-version" description="Create jar">
		<jar destfile="${build.dir}/jar/Kvaliteetsed-Ideed.jar" basedir="${build.classes.dir}">
			<fileset dir="${build.dir}/conf" />
			<fileset dir="${build.dir}/img" />
			<fileset dir="${build.dir}" includes="*.properties"/>
			<restrict>
				<archives>
					<zips>
						<fileset dir="lib" includes="**/*.jar"/>
					</zips>
				</archives>
			</restrict>

			<manifest>
				<attribute name="Main-Class" value="ee.ut.math.tvt.kvaliteetsedideed.Intro"/>
			</manifest>
		</jar>
	</target>

	<target name="jrun" description="Execute jar">
		<java jar="build/jar/Kvaliteetsed-Ideed.jar" fork="true"/>
	</target>

	<target name="increase-version" description="Increase version number in version.porperties">
		<propertyfile file="version.properties">
			<entry key="build.revision.number" type="int" operation="+" default="1" />
		</propertyfile>
		<property file="version.properties"/>
		<propertyfile file="version.properties">
			<entry key="build.number"  value="${build.major.number}.${build.minor.number}.${build.revision.number}"/>
		</propertyfile>
	</target>

	<!--Note: we did not use the method of passing credentials in the URL for pushing.
	We used SSH keys: https://github.com/maikop/Kvaliteetsed-Ideed/wiki/Pushing-with-ANT-targets -->
	<target name="git_commit" description="git add -A, git commit, git push">
		<input message="Commit comment" addproperty="comment" />
		<exec executable="git" >
			<arg value="add"/>
			<arg value="-A"/>
		</exec>
		<exec executable="git" >
			<arg value="commit"/>
			<arg value="-m ${comment}"/>
		</exec>
		<exec executable="git" >
			<arg value="push"/>
		</exec>
	</target>
	
			
	<target name="git_tag" description="git tag -a name -m comment, git push" >
		<input message="Tag name" addproperty="t.name" defaultvalue="homework_"/>
		<input message="Tag comment" addproperty="t.comment" defaultvalue="Homework_"/>
		<exec executable="git">
			<arg value="tag" />
			<arg value="-a"/>
			<arg value="${t.name}"/>
			<arg value="-m"/>
			<arg value="${t.comment}"/>
		</exec>
		
		<exec executable="git" >
			<arg value="push"/>
			<arg value="--tags"/>
		</exec>
	</target>
	
	<target name="dbmanager" description="Start the HSQLDB manager">
		<java 	classname="org.hsqldb.util.DatabaseManagerSwing"
				classpathref="compile.classpath"
				fork="yes">
			<arg line="--user sa --url ${db.url}"/>
		</java>
	</target>
	
	<target name="startdb" description="Start the HSQLDB with the default params">
		<java 	classname="org.hsqldb.Server"
				classpathref="compile.classpath"
				fork="yes">
			<arg line="-database.0 '${db.file}' -dbname.0 '${db.alias}'"/>
		</java>
	</target>

	<target name="build-tests" depends="build" description="Build the system">
		<javac
            srcdir="${test.dir}"
            destdir="${build.test.dir}"
            debug="true"
            debuglevel="lines,vars,source"
            encoding="utf-8"
            compiler="modern"
            target="1.5"
            source="1.5"
        	classpathref="libs"
        >
			<classpath>
				<pathelement path="${build.classes.dir}" />
			</classpath>
		</javac>
	</target>
	
	
	<target name="test" depends="build-tests" description="Run the template application">
			<junit>
				<classpath refid="test.classpath" />

				<formatter type="brief" usefile="false" />
				<batchtest>
					<fileset dir="${build.test.dir}" includes="**/*.class" />
				</batchtest>
			</junit>

		</target>

	</project>